<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.autohome.frostmourne.monitor.dao.mybatis.frostmourne.mapper.AlertLogExtendMapper" >
  <resultMap id="BaseResultMap"
             extends="com.autohome.frostmourne.monitor.dao.mybatis.frostmourne.mapper.generate.AlertLogMapper.BaseResultMap"
             type="com.autohome.frostmourne.monitor.dao.mybatis.frostmourne.domain.generate.AlertLog">
  </resultMap>
  <resultMap id="ResultMapWithBLOBs"
             extends="com.autohome.frostmourne.monitor.dao.mybatis.frostmourne.mapper.generate.AlertLogMapper.ResultMapWithBLOBs"
             type="com.autohome.frostmourne.monitor.dao.mybatis.frostmourne.domain.generate.AlertLog">
  </resultMap>

  <sql id="Base_Column_List">
    <include refid="com.autohome.frostmourne.monitor.dao.mybatis.frostmourne.mapper.generate.AlertLogMapper.Base_Column_List"></include>
  </sql>
  <sql id="Blob_Column_List">
    <include refid="com.autohome.frostmourne.monitor.dao.mybatis.frostmourne.mapper.generate.AlertLogMapper.Blob_Column_List"></include>
  </sql>

  <select id="aggregation" resultType="com.autohome.frostmourne.monitor.dao.mybatis.frostmourne.domain.AggregationDate">
    SELECT from_days(to_days(create_at)) AS `date`, COUNT(0) AS `count`
    FROM alert_log
    WHERE create_at BETWEEN #{startTime} AND #{endTime}
    <if test="recipient != null and recipient != ''">
      AND recipient = #{recipient}
    </if>
    <if test="sendStatus != null and sendStatus != ''">
      AND send_status = #{sendStatus}
    </if>
    GROUP BY from_days(to_days(create_at))
  </select>

</mapper>
